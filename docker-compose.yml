services:
  prometheus:
    image: prom/prometheus:latest
    network_mode: host
    container_name: archivist-prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alerting:/etc/prometheus/alerting:ro
      - ./prometheus/file_sd:/etc/prometheus/file_sd:ro
      - archivist_prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --storage.tsdb.retention.time=200h

  grafana:
    image: grafana/grafana:latest
    network_mode: host
    container_name: archivist-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD:-change_me}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
      - archivist_grafana_data:/var/lib/grafana

  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    network_mode: host
    container_name: blackbox-exporter
    restart: unless-stopped
    cap_add:
      - NET_RAW

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    network_mode: host
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave
    command: ["--path.rootfs=/host"]

  process-exporter:
    image: ncabatoff/process-exporter:latest
    network_mode: host
    container_name: process-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - ./process-exporter/process-exporter.yml:/config.yml:ro
    command: ["--procfs", "/host/proc", "--config.path", "/config.yml"]

  pve-exporter:
    image: prompve/prometheus-pve-exporter:latest
    network_mode: host
    container_name: pve-exporter

  alertmanager:
    image: prom/alertmanager:latest
    network_mode: host
    container_name: alertmanager
    restart: unless-stopped
    volumes:
      - ./prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro

    restart: unless-stopped
    volumes:
      - ./pve-exporter/pve.yml:/etc/prometheus/pve.yml:ro

  redis-exporter:
    image: oliver006/redis_exporter:latest
    network_mode: host
    container_name: redis-exporter
    restart: unless-stopped
    environment:
      - REDIS_ADDR=redis://127.0.0.1:6379

  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    network_mode: host
    container_name: postgres-exporter
    restart: unless-stopped
    environment:
      # Replace with real DSN
      - DATA_SOURCE_NAME=postgresql://postgres:password@127.0.0.1:5432/postgres?sslmode=disable

volumes:
  archivist_prometheus_data: {}
  archivist_grafana_data: {}
  celery-exporter:
    image: danihodovic/celery-exporter:latest
    network_mode: host
    container_name: celery-exporter
    restart: unless-stopped
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
